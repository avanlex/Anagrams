apply plugin: 'com.android.library'
apply plugin: 'spoon'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        //applicationId "com.github.avanlex"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


}

// This section is optional
spoon {
    // for debug output
    debug = true
    // To run a single test class
    className = 'fully.qualified.TestCase'
    // To run a single method in TestCase
    methodName = 'testMyApp'
    // To execute the tests device by device */
    sequential = true
    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.2.1'
    // Testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'

    // Espresso
    // Core library
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation "androidx.test:rules:1.3.0"

    // Roboelectric
    testImplementation 'org.robolectric:robolectric:4.3'

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

}


// for integration test of this plugin
check {
    doLast{
        println "Checking spoon tasks..."
        assert project.tasks.spoon != null
        assert project.tasks.spoonFreeDebugTest != null
        assert project.tasks.spoonProDebugTest != null

        assert project.tasks.spoonFreeDebugTest.debug
        assert "$project.tasks.spoonFreeDebugTest.output".startsWith("$buildDir/custom-report-dir")

        assert project.tasks.spoonFreeDebugTest.codeCoverage

        println "SUCCESS"
    }
}